[{"/Users/tamas/netflix-practise/src/index.js":"1","/Users/tamas/netflix-practise/src/App.js":"2","/Users/tamas/netflix-practise/src/reportWebVitals.js":"3","/Users/tamas/netflix-practise/src/pages/home.js":"4","/Users/tamas/netflix-practise/src/components/jumbotron/Jumbotron.js":"5","/Users/tamas/netflix-practise/src/components/grid/Grid.js":"6","/Users/tamas/netflix-practise/src/components/accordion/Accordion.js":"7","/Users/tamas/netflix-practise/src/components/footer/Footer.js":"8","/Users/tamas/netflix-practise/src/constants/routes.js":"9","/Users/tamas/netflix-practise/src/pages/index.js":"10","/Users/tamas/netflix-practise/src/pages/signin.js":"11","/Users/tamas/netflix-practise/src/pages/browse.js":"12","/Users/tamas/netflix-practise/src/pages/signup.js":"13","/Users/tamas/netflix-practise/src/lib/firebase.prod.js":"14","/Users/tamas/netflix-practise/src/context/firebase.js":"15","/Users/tamas/netflix-practise/src/components/signin/SignIn.js":"16","/Users/tamas/netflix-practise/src/components/signup/SignUp.js":"17","/Users/tamas/netflix-practise/src/helpers/routes.js":"18","/Users/tamas/netflix-practise/src/hooks/use-auth-listener.js":"19","/Users/tamas/netflix-practise/src/hooks/use-content.js":"20","/Users/tamas/netflix-practise/src/utils/selection-map.js":"21","/Users/tamas/netflix-practise/src/components/profiles/Profiles.js":"22","/Users/tamas/netflix-practise/src/components/loading/Loading.js":"23","/Users/tamas/netflix-practise/src/components/main/Main.js":"24","/Users/tamas/netflix-practise/src/components/slides/Slides.js":"25"},{"size":650,"mtime":1607536631341,"results":"26","hashOfConfig":"27"},{"size":1083,"mtime":1607555263453,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607261439299,"results":"29","hashOfConfig":"27"},{"size":398,"mtime":1607459451188,"results":"30","hashOfConfig":"27"},{"size":1415,"mtime":1607545043360,"results":"31","hashOfConfig":"27"},{"size":765,"mtime":1607432145185,"results":"32","hashOfConfig":"27"},{"size":2201,"mtime":1607546061908,"results":"33","hashOfConfig":"27"},{"size":1450,"mtime":1607644798834,"results":"34","hashOfConfig":"27"},{"size":125,"mtime":1607459078217,"results":"35","hashOfConfig":"27"},{"size":182,"mtime":1607459704565,"results":"36","hashOfConfig":"27"},{"size":192,"mtime":1607463490297,"results":"37","hashOfConfig":"27"},{"size":1278,"mtime":1607649808235,"results":"38","hashOfConfig":"27"},{"size":192,"mtime":1607537601085,"results":"39","hashOfConfig":"27"},{"size":449,"mtime":1607535065825,"results":"40","hashOfConfig":"27"},{"size":89,"mtime":1607462906284,"results":"41","hashOfConfig":"27"},{"size":3847,"mtime":1607556129125,"results":"42","hashOfConfig":"27"},{"size":4352,"mtime":1607555716198,"results":"43","hashOfConfig":"27"},{"size":949,"mtime":1607555145878,"results":"44","hashOfConfig":"27"},{"size":729,"mtime":1607555253574,"results":"45","hashOfConfig":"27"},{"size":772,"mtime":1607542702716,"results":"46","hashOfConfig":"27"},{"size":1031,"mtime":1607630219890,"results":"47","hashOfConfig":"27"},{"size":1447,"mtime":1607557373096,"results":"48","hashOfConfig":"27"},{"size":229,"mtime":1607552414032,"results":"49","hashOfConfig":"27"},{"size":5788,"mtime":1607644765507,"results":"50","hashOfConfig":"27"},{"size":1165,"mtime":1607648431712,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"ihhtcp",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"/Users/tamas/netflix-practise/src/index.js",["114"],"import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { firebase } from \"./lib/firebase.prod\"\nimport {Â FirebaseContext } from \"./context/firebase\"\n\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{firebase}}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["115","116"],"/Users/tamas/netflix-practise/src/App.js",[],"/Users/tamas/netflix-practise/src/reportWebVitals.js",[],"/Users/tamas/netflix-practise/src/pages/home.js",[],"/Users/tamas/netflix-practise/src/components/jumbotron/Jumbotron.js",[],"/Users/tamas/netflix-practise/src/components/grid/Grid.js",[],"/Users/tamas/netflix-practise/src/components/accordion/Accordion.js",["117","118"],"import React, {useState, createContext, useContext} from 'react'\nimport \"./Accordion.css\"\nimport faqData from \"../../fixtures/faqs\"\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { Link } from \"react-router-dom\"\n\n\nfunction Accordion(children, ...restProps) {\n    // const { toggleShow, setToggleShow } = useContext(ToggleContext);\n\n    return (\n        <section className=\"accordion\">\n            <h1>Frequently Asked Questions</h1>\n            <div className=\"accordion__container\">\n        \n                {faqData.map((item) => (\n                    <AccordionItem key={item.id} {...restProps} body={item.body} header={item.header}>{children}</AccordionItem>\n                ))}\n                <p className=\"form__p\">Ready to watch? Enter your email to create or restart your membership.</p>\n                <div className=\"jumbotron__form\" style={{width: \"700px\", margin: \"auto\"}}>\n                    <input \n                    type=\"text\" \n                    required\n                    />\n                    <span className=\"floating-label\">Email Address</span>\n                    <Link to=\"/signup\">\n                    <div className=\"jumbotron__form--button\">\n                    <p>Get Started <ArrowForwardIosIcon fontSize=\"small\"/></p>\n                    </div>\n                    </Link>\n                </div>\n            </div>\n        </section>\n    )\n}\n\n        const AccordionItem = ({header, body}) => {\n            const [ toggleShow, setToggleShow ] = useState(false);\n            \n            return (\n            <div className=\"accordion__item\">\n                <div className=\"accordion__item--headerContainer\" onClick={() => setToggleShow(!toggleShow)}>\n                <div className=\"accoridon__item--header\">{header}</div>\n                {toggleShow? (\n                    <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\n                ): <img src=\"/images/icons/add.png\" alt=\"Open\" />}\n                </div>\n                <div className={toggleShow ? \"accordion__item--body open\" : \"accordion__item--body\"}><p>{body}</p>\n                    </div>\n            </div>\n\n            )\n        }\n\n\nexport default Accordion\n","/Users/tamas/netflix-practise/src/components/footer/Footer.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React from 'react'\nimport \"./Footer.css\"\n\nfunction Footer({style}) {\n    return (\n        <footer style={style}>\n            <p><a href=\"#\">Questions? Contact us.</a></p>\n            <div className=\"footer__grid\">\n                <ul>\n                    <li><a href=\"#\">FAQ</a></li>\n                    <li><a href=\"#\">Investor Relations</a></li>\n                    <li><a href=\"#\">Ways to Watch</a></li>\n                    <li><a href=\"#\">Corporate Information</a></li>\n                    <li><a href=\"#\">Netflix Originals</a></li>\n                </ul>\n                <ul>\n                    <li><a href=\"#\">Help Center</a></li>\n                    <li><a href=\"#\">Jobs</a></li>\n                    <li><a href=\"#\">Terms of Use</a></li>\n                    <li><a href=\"#\">Contact Us</a></li>\n                </ul>\n                <ul>\n                    <li><a href=\"#\">Account</a></li>\n                    <li><a href=\"#\">Redeem Gift Cards</a></li>\n                    <li><a href=\"#\">Privacy</a></li>\n                    <li><a href=\"#\">Speed Test</a></li>\n                </ul>\n                <ul>\n                    <li><a href=\"#\">Media Center</a></li>\n                    <li><a href=\"#\">Buy Gift Cards</a></li>\n                    <li><a href=\"#\">Cookie Preferences</a></li>\n                    <li><a href=\"#\">Legal Notices</a></li>\n                </ul>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","/Users/tamas/netflix-practise/src/constants/routes.js",[],"/Users/tamas/netflix-practise/src/pages/index.js",[],"/Users/tamas/netflix-practise/src/pages/signin.js",[],"/Users/tamas/netflix-practise/src/pages/browse.js",["137"],"import React, {useState, useContext, useEffect} from 'react'\nimport UseContent  from \"../hooks/use-content\"\nimport selectionFilter from \"../utils/selection-map\"\nimport Profiles from \"../components/profiles/Profiles\"\nimport { FirebaseContext } from \"../context/firebase\"\nimport Main from \"../components/main/Main\"\n\nfunction Browse() {\n    const { series } = UseContent(\"series\");\n    const { films } = UseContent(\"films\");\n    const [profile, setProfile] = useState({})\n    const [loading, setLoading] = useState(true)\n    const slides = selectionFilter({series, films})\n    const { firebase } = useContext(FirebaseContext)\n    const user = firebase.auth().currentUser || {};\n    const [photo, setPhoto] = useState(null)\n\n    // const photo = `images/users/${user.photoURL}.png`\n\n    useEffect(() => {\n        setPhoto(`images/users/${user.photoURL}.png`)\n    setTimeout(() => {\n        setLoading(false)\n    }, 500)\n    }, [profile.displayName])\n    \n    return (\n        !profile.displayName? (\n        <div>\n            <Profiles user={user} setProfile={setProfile} loading={loading}/>\n        </div>) : \n        <div className=\"browse\">\n            <Main user={user} slides={slides} photo={photo} series={series} films={films}/>\n        </div>\n    )\n}\n\nexport default Browse\n","/Users/tamas/netflix-practise/src/pages/signup.js",[],"/Users/tamas/netflix-practise/src/lib/firebase.prod.js",[],"/Users/tamas/netflix-practise/src/context/firebase.js",[],"/Users/tamas/netflix-practise/src/components/signin/SignIn.js",["138"],"import React, {useState, useContext, useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport \"./SignIn.css\"\nimport logo from \"../../logo.svg\"\nimport {Link} from \"react-router-dom\"\nimport { FirebaseContext } from '../../context/firebase';\nimport * as ROUTES from \"../../constants/routes\"\nimport Footer from \"../footer/Footer\"\n\nfunction SignIn() {\n    const history = useHistory()\n    const [learnMore, setLearnMore] = useState(false);\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\")\n    const isInvalid = password === \"\" || emailAddress === \"\";\n\n    const { firebase } = useContext(FirebaseContext);\n\n    const handleSignIn = (e) => {\n        e.preventDefault();\n\n        // firebase\n        return firebase\n            .auth()\n            .signInWithEmailAndPassword(emailAddress, password)\n            .then(() => {\n                history.push(ROUTES.BROWSE)\n            })\n            .catch((error) => {\n                setEmailAddress(\"\");\n                setPassword(\"\");\n                setError(error.message)\n            })\n    }\n    return (\n        <>\n        <div className=\"sign_in\">\n            <div className=\"sign_in__header\">\n                <Link to=\"/\">\n                <img src={logo} alt=\"\" />\n                </Link>\n            </div>\n            <div className=\"sign_in__form\">\n                    {error? <div className=\"sign_in_error\">\n            <               p>{error}</p>\n                    </div> : null}\n                <h1>Sign In</h1>\n                <form method=\"POST\" onSubmit={handleSignIn}>\n                    <label>\n                        <input \n                            type=\"text\"  \n                            className=\"egy\"\n                            required\n                            value={emailAddress}\n                            onChange={(e) => setEmailAddress(e.target.value)} />\n                        <label className=\"ketto\">Email Address</label>\n                    </label>\n                    <label>\n                        <input \n                            type=\"password\"  \n                            className=\"egy\"\n                            required \n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}/>\n                        <label className=\"ketto\">Password</label>\n                    </label>\n                    <button disabled={isInvalid} type=\"submit\">Sign In</button>\n                    <div className=\"sign_in__form--checkbox\">\n                        <input type=\"checkbox\"/>\n                        <span>Remember me</span>\n                    </div>\n                </form>\n\n                <div className=\"facebook__login\">\n                    <img src=\"https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png\" className=\"facebook_icon\" alt=\"fb-icon\" />\n                    <span>Login with Facebook</span>\n                </div>\n                \n                <p>New to Netflix? <Link to=\"/signup\">Sign up now</Link>.</p>\n                <span>This page is protected by Google reCAPTCHA to ensure you're not a bot. {!learnMore? <span className=\"learn_more\" onClick={() => setLearnMore(true)}>Learn more.</span> : null}</span>\n                <div className={learnMore? \"learn_more_text learn_more_open\" : \"learn_more_text\"}><p>The information collected by Google reCAPTCHA is subject to the Google <span>Privacy Policy</span> and <span>Terms of Service</span>, and is used for providing, maintaining, and improving the reCAPTCHA service and for general security purposes (it is not used for personalized advertising by Google).</p></div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default SignIn\n","/Users/tamas/netflix-practise/src/components/signup/SignUp.js",["139"],"import React, {useState, useContext, useEffect} from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport logo from \"../../logo.svg\"\nimport {Link} from \"react-router-dom\"\nimport { FirebaseContext } from '../../context/firebase';\nimport * as ROUTES from \"../../constants/routes\"\nimport Footer from \"../footer/Footer\"\n\nfunction SignUp() {\n    const history = useHistory()\n    const [learnMore, setLearnMore] = useState(false);\n    const [firstName, setFirstName] = useState(\"\")\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\")\n    const isInvalid = password === \"\" || emailAddress === \"\" || firstName ===\"\";\n\n    const { firebase } = useContext(FirebaseContext);\n\n    const handleSignUp = (event) => {\n        event.preventDefault();\n    \n        return firebase\n          .auth()\n          .createUserWithEmailAndPassword(emailAddress, password)\n          .then((result) =>\n            result.user\n              .updateProfile({\n                displayName: firstName,\n                photoURL: Math.floor(Math.random() * 5) + 1,\n              })\n              .then(() => {\n                history.push(ROUTES.BROWSE);\n              })\n          )\n          .catch((error) => {\n            setFirstName('');\n            setEmailAddress('');\n            setPassword('');\n            setError(error.message);\n          });\n      };\n    return (\n        <>\n        <div className=\"sign_in\">\n            <div className=\"sign_in__header\">\n                <Link to=\"/\">\n                <img src={logo} alt=\"\" />\n                </Link>\n            </div>\n            <div className=\"sign_in__form\">\n                    {error? <div className=\"sign_in_error\">\n            <               p>{error}</p>\n                    </div> : null}\n                <h1>Sign Up</h1>\n                <form method=\"POST\" onSubmit={handleSignUp}>\n                    <label>\n                        <input \n                            type=\"text\"  \n                            className=\"egy\"\n                            required\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)} />\n                        <label className=\"ketto\">First Name</label>\n                    </label>\n                    <label>\n                        <input \n                            type=\"text\"  \n                            className=\"egy\"\n                            required\n                            value={emailAddress}\n                            onChange={(e) => setEmailAddress(e.target.value)} />\n                        <label className=\"ketto\">Email Address</label>\n                    </label>\n                    <label>\n                        <input \n                            type=\"password\"  \n                            className=\"egy\"\n                            required \n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}/>\n                        <label className=\"ketto\">Password</label>\n                    </label>\n                    <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n                </form>\n\n                <div className=\"facebook__login\">\n                    <img src=\"https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png\" className=\"facebook_icon\" alt=\"fb-icon\" />\n                    <span>Sign up with Facebook</span>\n                </div>\n                \n                <p>Already have an account? <Link to=\"/signin\">Sign in now</Link>.</p>\n                <span>This page is protected by Google reCAPTCHA to ensure you're not a bot. {!learnMore? <span className=\"learn_more\" onClick={() => setLearnMore(true)}>Learn more.</span> : null}</span>\n                <div className={learnMore? \"learn_more_text learn_more_open\" : \"learn_more_text\"}><p>The information collected by Google reCAPTCHA is subject to the Google <span>Privacy Policy</span> and <span>Terms of Service</span>, and is used for providing, maintaining, and improving the reCAPTCHA service and for general security purposes (it is not used for personalized advertising by Google).</p></div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default SignUp\n","/Users/tamas/netflix-practise/src/helpers/routes.js",[],"/Users/tamas/netflix-practise/src/hooks/use-auth-listener.js",["140"],"import {useState, useEffect, useContext} from \"react\";\nimport { FirebaseContext } from \"../context/firebase\"\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"authUser\")))\n\n    const { firebase } = useContext(FirebaseContext)\n\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem(\"authUser\", JSON.stringify(authUser))\n                setUser(authUser)\n            } else {\n                localStorage.removeItem(\"authUser\");\n                setUser(null)\n            }\n        })\n        \n        return () => listener()\n    }, []);\n    return {user}\n}\n","/Users/tamas/netflix-practise/src/hooks/use-content.js",["141"],"import { useEffect, useState, useContext} from \"react\"\nimport { FirebaseContext } from \"../context/firebase\";\n\nexport default function UseContent(target) {\n    const [content, setContent] = useState([]);\n    const {firebase} = useContext(FirebaseContext)\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection(target)\n            .get()\n            .then((snapshot) => {\n                const allContent = snapshot.docs.map((contentObj) => ({\n                    ...contentObj.data(),\n                    docId: contentObj.id,\n                }));\n\n                setContent(allContent);\n            })\n            .catch((error) => {\n                console.log(error.message)\n            })\n    }, []);\n    return {[target]: content}\n}","/Users/tamas/netflix-practise/src/utils/selection-map.js",[],"/Users/tamas/netflix-practise/src/components/profiles/Profiles.js",["142"],"import React, {useEffect, useState} from 'react'\nimport \"./Profiles.css\"\nimport logo from \"../../logo.svg\"\nimport Loading from \"../../components/loading/Loading\"\n\n\nfunction Profiles({user, setProfile, loading}) {\n    const [photo, setPhoto] = useState(null)\n\n   useEffect(() => {\n       if(user.photoURL) {\n        setPhoto(`images/users/${user.photoURL}.png`)\n       } else {\n           setPhoto(null)\n       }\n   }, [])\n    return (\n        <div className=\"profiles\">\n            <header className=\"profiles__header\">\n                <img src={logo} alt=\"Netflix\" />\n            </header>\n            {loading? <Loading /> : \n            <div className=\"profiles__center\">\n                <div className=\"profiles__list\">\n                <h1>Who's watching?</h1>\n                    <ul>\n                        <li onClick={() => setProfile({displayName: user.displayName, photoURL: user.photoURL})}>\n                            <div className=\"profiles__list--inner\">\n                                <div className=\"inner-img\">\n                                {!photo? <img src=\"images/users/1.png\" alt=\"userphoto\" /> :  <img src={photo} alt=\"userphoto\" />}\n                                </div>\n                                <span>{user.displayName}</span>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Profiles\n","/Users/tamas/netflix-practise/src/components/loading/Loading.js",[],"/Users/tamas/netflix-practise/src/components/main/Main.js",["143","144","145","146","147","148"],"import React, {useState, useContext, useEffect} from 'react'\nimport \"./Main.css\"\nimport logo from \"../../logo.svg\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons'\nimport CloseIcon from '@material-ui/icons/Close';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport { Link } from \"react-router-dom\"\nimport { FirebaseContext } from '../../context/firebase';\nimport Slides from \"../slides/Slides\"\nimport Footer from \"../footer/Footer\"\n\nfunction Main({user, films, series, slides}) {\n    const arrow = <FontAwesomeIcon icon={faSortDown} />\n    const [isUserFocusing, setIsUserFocusing] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [category, setCategory] = useState(\"films\");\n    const [muted, setMuted] = useState(true)\n    const { firebase } = useContext(FirebaseContext);\n    const [slideRows, setSlideRows] = useState([])\n\n  \n    useEffect(() => {\n        setSlideRows(slides[category])\n        console.log(slideRows)\n    }, [slides, category])\n\n    return (\n        <div className=\"main\" >\n             <header className=\"main__header\">\n                <div className=\"main__header--left\">\n                    <img src={logo} alt=\"\" />\n                    <ul>\n                        <Link className={category === \"films\" ? \"active\" : \"\"} onClick={() => setCategory(\"films\")}>Movies</Link>\n                        <Link className={category === \"series\" ? \"active\" : \"\"} active={category === \"series\" ? true : false} onClick={() => setCategory(\"series\")}>TV Shows</Link>\n                    </ul>\n                </div>\n                <div className=\"main__header--right\">\n                    \n                 \n                    {!isUserFocusing? <button className={isUserFocusing? \"button-op\" : null} onClick={() => setIsUserFocusing(true)}>\n                    \n                    <img className=\"main__header--search\" src=\"images/icons/search.png\"></img>\n                    </button> : null}\n                \n                        <div className={isUserFocusing? \"search__input input_open\" : \"search__input\"}>\n                            <img className=\"main__header--search\" src=\"images/icons/search.png\"></img>\n                            <input \n                            \n                                className={isUserFocusing? \"input-inner-open input-inner\" : \"input-inner\"} \n                                type=\"text\" \n                                placeholder=\"Titles, people, genres\"\n                                value={searchValue}\n                                onChange={(e) => setSearchValue(e.target.value)}/>\n                                {searchValue === \"\"? null: <CloseIcon onClick={() => setSearchValue(\"\")} className=\"clear__search\"/>}\n                                \n                        </div>\n                        \n                    <div className=\"main__header--profile\">\n                    <img src={`images/users/${user.photoURL}.png`}></img>\n                        <span>{arrow}</span>\n                        <div className=\"user__dropdown\">\n                    <div className=\"user__dropdown--arrow\">{arrow}</div>\n                    <div className=\"header__profile--content\">\n                            <div className=\"profile__content--user\">\n                                <img src={`images/users/${user.photoURL}.png`}></img>\n                                <span>{user.displayName}</span>\n                            </div>\n                            <hr />\n                            <div className=\"profile__content--list\">\n                                <ul>\n                                    <li>Account</li>\n                                    <li>Help Center</li>\n                                    <li onClick={() => firebase.auth().signOut()}>Sign Out of Netflix</li>\n                                </ul>\n                            </div>\n                     </div>\n                </div>\n                    </div>\n                    \n                </div>\n               \n                \n             </header>\n             <main onClick={() => setIsUserFocusing(false)}>\n                 <div className=\"main__video\">\n                    <video\n                    autoPlay={true} \n                    loop\n                    muted={muted}\n                    style={{position: \"relative\", width: \"100%\"}}>\n                        <source src=\"videos/JOKER.mp4\" type=\"video/mp4\" />\n                    </video>\n                    <div className=\"header__movie--info\">\n                        <img src=\"images/joker.png\"></img>\n                        <p>Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham\n                        City.</p>\n                        <button>\n                            <div className=\"play-arrow\">{arrow}</div>\n                            <span>Play</span>\n                        </button>\n                        \n                    </div>\n                    <div className=\"header__movie--mute\">\n                            {muted? <VolumeOffIcon fontSize=\"small\" onClick={() => setMuted(false)}/> : <VolumeUpIcon fontSize=\"small\" onClick={() => setMuted(true)}/>}\n                        </div>\n                    </div>\n                     <section className=\"slides__container\">\n                        <Slides slideRows={slideRows} category={category}/>\n                    </section> \n\n                    \n                    \n             </main>\n             <footer>\n                 <Footer style={{ backgroundColor: '#141414' }}/>\n             </footer>\n        </div>\n    )\n}\n\nexport default Main\n","/Users/tamas/netflix-practise/src/components/slides/Slides.js",["149"],"import React from 'react'\nimport \"./Slides.css\"\nimport Carousel from \"react-elastic-carousel\"\n\nfunction Slides({slideRows, category}) {\n\n    const breakPoints = [\n       \n        {width: 300, itemsToShow: 2 ,itemsToScroll: 2},\n        {width: 568, itemsToShow: 3, itemsToScroll: 3},\n        {width: 700, itemsToShow: 4, itemsToScroll: 4},\n        {width: 1100, itemsToShow: 5, itemsToScroll: 5}\n    ]\n    \n\nconsole.log(\"hi\", slideRows)\n    return (\n        <div className=\"slides\">\n           {slideRows.map((slideItem) => {\n               return (\n                   <div>\n                       <h1>{slideItem.title}</h1>\n                       \n                       <div className=\"slide__row\">\n                       <Carousel breakPoints={breakPoints}>\n                       {slideItem.data.map((item, index) => (\n                                 <img src={`images/${category}/${item.genre}/${item.slug}/small.jpg`} />\n                           ))}\n                            </Carousel>\n                       </div>\n                      \n                   </div>\n                    \n               )\n})}\n        </div>\n    )\n}\n\nexport default Slides\n",{"ruleId":"150","severity":1,"message":"151","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"150","severity":1,"message":"158","line":1,"column":26,"nodeType":"152","messageId":"153","endLine":1,"endColumn":39},{"ruleId":"150","severity":1,"message":"159","line":1,"column":41,"nodeType":"152","messageId":"153","endLine":1,"endColumn":51},{"ruleId":"160","severity":1,"message":"161","line":7,"column":16,"nodeType":"162","endLine":7,"endColumn":28},{"ruleId":"160","severity":1,"message":"161","line":10,"column":25,"nodeType":"162","endLine":10,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":11,"column":25,"nodeType":"162","endLine":11,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":12,"column":25,"nodeType":"162","endLine":12,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":13,"column":25,"nodeType":"162","endLine":13,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":14,"column":25,"nodeType":"162","endLine":14,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":17,"column":25,"nodeType":"162","endLine":17,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":18,"column":25,"nodeType":"162","endLine":18,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":19,"column":25,"nodeType":"162","endLine":19,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":20,"column":25,"nodeType":"162","endLine":20,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":23,"column":25,"nodeType":"162","endLine":23,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":24,"column":25,"nodeType":"162","endLine":24,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":25,"column":25,"nodeType":"162","endLine":25,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":26,"column":25,"nodeType":"162","endLine":26,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":29,"column":25,"nodeType":"162","endLine":29,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":30,"column":25,"nodeType":"162","endLine":30,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":31,"column":25,"nodeType":"162","endLine":31,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":32,"column":25,"nodeType":"162","endLine":32,"endColumn":37},{"ruleId":"163","severity":1,"message":"164","line":25,"column":8,"nodeType":"165","endLine":25,"endColumn":29,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":38,"nodeType":"152","messageId":"153","endLine":1,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":1,"column":38,"nodeType":"152","messageId":"153","endLine":1,"endColumn":47},{"ruleId":"163","severity":1,"message":"167","line":21,"column":8,"nodeType":"165","endLine":21,"endColumn":10,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":24,"column":8,"nodeType":"165","endLine":24,"endColumn":10,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"171","line":16,"column":7,"nodeType":"165","endLine":16,"endColumn":9,"suggestions":"172"},{"ruleId":"163","severity":1,"message":"173","line":27,"column":8,"nodeType":"165","endLine":27,"endColumn":26,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":44,"column":21,"nodeType":"162","endLine":44,"endColumn":89},{"ruleId":"175","severity":1,"message":"176","line":48,"column":29,"nodeType":"162","endLine":48,"endColumn":97},{"ruleId":"175","severity":1,"message":"176","line":61,"column":21,"nodeType":"162","endLine":61,"endColumn":68},{"ruleId":"175","severity":1,"message":"176","line":67,"column":33,"nodeType":"162","endLine":67,"endColumn":80},{"ruleId":"175","severity":1,"message":"176","line":96,"column":25,"nodeType":"162","endLine":96,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":27,"column":34,"nodeType":"162","endLine":27,"endColumn":105},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"'createContext' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.photoURL'. Either include it or remove the dependency array.","ArrayExpression",["179"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'user.photoURL'. Either include it or remove the dependency array. If 'setPhoto' needs the current value of 'user.photoURL', you can also switch to useReducer instead of useState and read 'user.photoURL' in the reducer.",["182"],"React Hook useEffect has a missing dependency: 'slideRows'. Either include it or remove the dependency array.",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [profile.displayName, user.photoURL]",{"range":"194","text":"195"},"Update the dependencies array to be: [firebase]",{"range":"196","text":"197"},"Update the dependencies array to be: [firebase, target]",{"range":"198","text":"199"},"Update the dependencies array to be: [user.photoURL]",{"range":"200","text":"201"},"Update the dependencies array to be: [slides, category, slideRows]",{"range":"202","text":"203"},[923,944],"[profile.displayName, user.photoURL]",[704,706],"[firebase]",[735,737],"[firebase, target]",[418,420],"[user.photoURL]",[1114,1132],"[slides, category, slideRows]"]